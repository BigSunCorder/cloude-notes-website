{"version":3,"file":"js/103.ed86a0f5.js","mappings":"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","sources":["webpack://vue-evernote-client/./node_modules/core-js/modules/es.array.at.js","webpack://vue-evernote-client/./node_modules/core-js/modules/es.string.at-alternative.js","webpack://vue-evernote-client/./node_modules/linkify-it/index.js","webpack://vue-evernote-client/./node_modules/linkify-it/lib/re.js","webpack://vue-evernote-client/./node_modules/markdown-it/index.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/common/entities.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/common/html_blocks.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/common/html_re.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/common/utils.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/helpers/index.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/index.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/parser_block.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/parser_core.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/parser_inline.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/presets/commonmark.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/presets/default.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/presets/zero.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/renderer.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/ruler.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_block/code.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_block/fence.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_block/heading.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_block/hr.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_block/html_block.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_block/lheading.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_block/list.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_block/reference.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_block/state_block.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_block/table.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_core/block.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_core/inline.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_core/linkify.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_core/normalize.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_core/replacements.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_core/state_core.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_core/text_join.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_inline/entity.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_inline/escape.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_inline/fragments_join.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_inline/image.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_inline/link.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_inline/linkify.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_inline/newline.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/rules_inline/text.js","webpack://vue-evernote-client/./node_modules/markdown-it/lib/token.js","webpack://vue-evernote-client/./node_modules/mdurl/decode.js","webpack://vue-evernote-client/./node_modules/mdurl/encode.js","webpack://vue-evernote-client/./node_modules/mdurl/format.js","webpack://vue-evernote-client/./node_modules/mdurl/index.js","webpack://vue-evernote-client/./node_modules/mdurl/parse.js","webpack://vue-evernote-client/./node_modules/punycode/punycode.es6.js","webpack://vue-evernote-client/./node_modules/uc.micro/categories/Cc/regex.js","webpack://vue-evernote-client/./node_modules/uc.micro/categories/Cf/regex.js","webpack://vue-evernote-client/./node_modules/uc.micro/categories/P/regex.js","webpack://vue-evernote-client/./node_modules/uc.micro/categories/Z/regex.js","webpack://vue-evernote-client/./node_modules/uc.micro/index.js","webpack://vue-evernote-client/./node_modules/uc.micro/properties/Any/regex.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// `Array.prototype.at` method\n// https://github.com/tc39/proposal-relative-indexing-method\n$({ target: 'Array', proto: true }, {\n  at: function at(index) {\n    var O = toObject(this);\n    var len = lengthOfArrayLike(O);\n    var relativeIndex = toIntegerOrInfinity(index);\n    var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;\n    return (k < 0 || k >= len) ? undefined : O[k];\n  }\n});\n\naddToUnscopables('at');\n","'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\n\nvar charAt = uncurryThis(''.charAt);\n\nvar FORCED = fails(function () {\n  // eslint-disable-next-line es-x/no-array-string-prototype-at -- safe\n  return '𠮷'.at(-2) !== '\\uD842';\n});\n\n// `String.prototype.at` method\n// https://github.com/tc39/proposal-relative-indexing-method\n$({ target: 'String', proto: true, forced: FORCED }, {\n  at: function at(index) {\n    var S = toString(requireObjectCoercible(this));\n    var len = S.length;\n    var relativeIndex = toIntegerOrInfinity(index);\n    var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;\n    return (k < 0 || k >= len) ? undefined : charAt(S, k);\n  }\n});\n","'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test     = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\nLinkifyIt.prototype.matchAtStart = function matchAtStart(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) return null;\n\n  var m = this.re.schema_at_start.exec(text);\n  if (!m) return null;\n\n  var len = this.testSchemaAt(text, m[2], m[0].length);\n  if (!len) return null;\n\n  this.__schema__     = m[2];\n  this.__index__      = m.index + m[1].length;\n  this.__last_index__ = m.index + m[0].length + len;\n\n  return createMatch(this, 0);\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n  opts = opts || {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' +\n    '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' +\n          (opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          ',(?!' + re.src_ZCc + '|$)|' +       // allow `,,,` in paths\n          ';(?!' + re.src_ZCc + '|$)|' +       // allow `;` if not followed by space-like char\n          '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]|$)' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3C /* < */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) { break; }\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 32) { return result; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28 /* ( */ && marker === 0x29 /* ) */) {\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  // `text_join` finds `text_special` tokens (for escape sequences)\n  // and joins them with the rest of the text\n  [ 'text_join',      require('./rules_core/text_join')      ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'linkify',         require('./rules_inline/linkify') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\n// `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  // rules for pairs separate '**' into its own text tokens, which may be left unused,\n  // rule below merges unused segments back with the rest of the text\n  [ 'fragments_join',  require('./rules_inline/fragments_join') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline',\n        'text_join'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'fragments_join'\n      ]\n    }\n  }\n};\n","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted, i, arr, tmpAttrs, tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // set offset past spaces and \">\"\n  initial = offset = state.sCount[startLine] + 1;\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !isOutdented) {\n      // This line is inside the blockquote.\n\n      // set offset past spaces and \">\"\n      initial = offset = state.sCount[nextLine] + 1;\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    }\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// GFM table, https://github.github.com/gfm/#tables-extension-\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c/* | */) {\n      if (!isEscaped) {\n        // pipe separating cells, '|'\n        result.push(current + str.substring(lastPos, pos));\n        current = '';\n        lastPos = pos + 1;\n      } else {\n        // escaped pipe, '\\|'\n        current += str.substring(lastPos, pos - 1);\n        lastPos = pos;\n      }\n    }\n\n    isEscaped = (ch === 0x5c/* \\ */);\n    pos++;\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines, oldParentType, terminate,\n      terminatorRules, firstCh, secondCh;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  firstCh = state.src.charCodeAt(pos++);\n  if (firstCh !== 0x7C/* | */ && firstCh !== 0x2D/* - */ && firstCh !== 0x3A/* : */) { return false; }\n\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  secondCh = state.src.charCodeAt(pos++);\n  if (secondCh !== 0x7C/* | */ && secondCh !== 0x2D/* - */ && secondCh !== 0x3A/* : */ && !isSpace(secondCh)) {\n    return false;\n  }\n\n  // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n  if (firstCh === 0x2D/* - */ && isSpace(secondCh)) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n  // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n  columnCount = columns.length;\n  if (columnCount === 0 || columnCount !== aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table';\n\n  // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) { break; }\n    lineText = getLine(state, nextLine).trim();\n    if (!lineText) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token     = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [ startLine + 2, 0 ];\n    }\n\n    token     = state.push('tr_open', 'tr', 1);\n    token.map = [ nextLine, nextLine + 1 ];\n\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n        if (links.length > 0 &&\n            links[0].index === 0 &&\n            i > 0 &&\n            tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\n\nmodule.exports = function text_join(state) {\n  var j, l, tokens, curr, max, last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' &&\n          curr + 1 < max &&\n          tokens[curr + 1].type === 'text') {\n\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) { tokens[last] = tokens[curr]; }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var url, fullUrl, token, ch, start, max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n\n    ch = state.src.charCodeAt(pos);\n\n    if (ch === 0x3C /* < */) return false;\n    if (ch === 0x3E /* > */) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n","// Parse backticks\n\n'use strict';\n\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, token, matchStart, matchEnd, openerLength, closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  // scan marker length\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchStart = matchEnd = pos;\n\n  // Nothing found in the cache, scan until the end of the line (or until marker is found)\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    // scan marker length\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token     = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n\n    // Some different length found, put it in cache as upper limit of where closer can be found\n    state.backticks[closerLength] = matchStart;\n  }\n\n  // Scanned through the end, didn't find anything\n  state.backticksScanned = true;\n\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  if (!max) return;\n\n  // headerIdx is the first delimiter of the current (where closer is) delimiter run\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    jumps.push(0);\n\n    // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token;\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1, -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length % 3)];\n\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            jumps[openerIdx - 1] + 1 :\n            0;\n\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + ((closer.length || 0) % 3)] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               // check that first two markers match and adjacent\n               delimiters[i - 1].marker === startDelim.marker &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               // check that last two markers are adjacent (we can safely assume they match)\n               delimiters[startDelim.end + 1].token === endDelim.token + 1;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) return false;\n\n  if (pos + 1 >= max) return false;\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23 /* # */) {\n    match = state.src.slice(pos).match(DIGITAL_RE);\n    if (match) {\n      if (!silent) {\n        code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n\n        token         = state.push('text_special', '', 0);\n        token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        token.markup  = match[0];\n        token.info    = 'entity';\n      }\n      state.pos += match[0].length;\n      return true;\n    }\n  } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token         = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup  = match[0];\n          token.info    = 'entity';\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch1, ch2, origStr, escapedStr, token, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) return false;\n  pos++;\n\n  // '\\' at the end of the inline block\n  if (pos >= max) return false;\n\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++;\n    // skip leading whitespaces from next line\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info   = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function fragments_join(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n\n    if (isLinkOpen(token.content))  state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n      start = pos;\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n\n      // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos;\n\n        // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n          if (!isSpace(code) && code !== 0x0A) { break; }\n        }\n      }\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process links like https://example.org/\n\n'use strict';\n\n\n// RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n\n  pos = state.pos;\n  max = state.posMax;\n\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A/* : */) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F/* / */) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F/* / */) return false;\n\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n\n  proto = match[1];\n\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n\n  url = link.url;\n\n  // disallow '*' at the end of the link (conflicts with emphasis)\n  url = url.replace(/\\*+$/, '');\n\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n\n    token         = state.push('link_open', 'a', 1);\n    token.attrs   = [ [ 'href', fullUrl ] ];\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n\n    token         = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n\n    token         = state.push('link_close', 'a', -1);\n    token.markup  = 'linkify';\n    token.info    = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, ws, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) ws--;\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n\n  // backtick length => last seen position\n  this.backticks = {};\n  this.backticksScanned = false;\n\n  // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n  this.linkLevel = 0;\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0,     // disable \"rule of 3\" length checks meant for emphasis\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport { ucs2decode, ucs2encode, decode, encode, toASCII, toUnicode };\nexport default punycode;\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/"],"names":["$","toObject","lengthOfArrayLike","toIntegerOrInfinity","addToUnscopables","target","proto","at","index","O","this","len","relativeIndex","k","undefined","uncurryThis","requireObjectCoercible","toString","fails","charAt","FORCED","forced","S","length","assign","obj","sources","Array","prototype","slice","call","arguments","forEach","source","Object","keys","key","_class","isString","isObject","isRegExp","isFunction","escapeRE","str","replace","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","isOptionsObj","reduce","acc","hasOwnProperty","defaultSchemas","validate","text","pos","self","tail","re","http","RegExp","src_auth","src_host_port_strict","src_path","test","match","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_2ch_src_re","tlds_default","split","resetScanCache","__index__","__text_cache__","createValidator","createNormalizer","normalize","compile","require","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","push","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","name","val","Error","__compiled__","__schemas__","compiled","link","alias","slist","filter","map","schema_test","src_ZPCc","schema_search","schema_at_start","pretest","Match","shift","start","end","__last_index__","schema","__schema__","toLowerCase","lastIndex","raw","url","createMatch","LinkifyIt","schemas","options","add","definition","set","m","ml","me","next","tld_pos","at_pos","exec","testSchemaAt","search","indexOf","result","matchAtStart","list","keepOld","isArray","concat","sort","el","idx","arr","reverse","module","exports","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","text_separators","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","attr_name","unquoted","single_quoted","double_quoted","attr_value","attribute","open_tag","close_tag","comment","processing","declaration","cdata","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","_hasOwnProperty","has","object","TypeError","arrayReplaceAt","src","newElements","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","UNESCAPE_MD_RE","ENTITY_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","entities","replaceEntityPattern","code","charCodeAt","parseInt","unescapeMd","unescapeAll","escaped","entity","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","escapeHtml","REGEXP_ESCAPE_RE","isSpace","isWhiteSpace","UNICODE_PUNCT_RE","isPunctChar","isMdAsciiPunct","normalizeReference","trim","toUpperCase","lib","mdurl","ucmicro","parseLinkLabel","parseLinkDestination","parseLinkTitle","max","level","lines","ok","state","disableNested","found","marker","prevPos","labelEnd","posMax","oldPos","md","inline","skipToken","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","punycode","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","RECODE_HOSTNAME_FOR","normalizeLink","parsed","parse","hostname","protocol","toASCII","er","encode","format","normalizeLinkText","toUnicode","decode","defaultChars","MarkdownIt","presetName","block","core","renderer","linkify","configure","presets","components","rules","ruler","enableOnly","rules2","ruler2","enable","ignoreInvalid","chain","missed","disable","use","plugin","args","apply","env","State","process","tokens","render","parseInline","inlineMode","renderInline","Ruler","_rules","i","alt","tokenize","startLine","endLine","getRules","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","Core","l","_rules2","cache","pending","pushPending","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","default_rules","code_inline","slf","token","renderAttrs","content","code_block","fence","highlighted","tmpAttrs","tmpToken","info","langName","langAttrs","attrIndex","attrs","image","renderInlineAsText","children","renderToken","hardbreak","softbreak","html_block","html_inline","nextToken","needLf","hidden","nesting","tag","type","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","altName","fn","opt","before","beforeName","ruleName","splice","after","afterName","chainName","silent","adjustTab","initial","lastLineEmpty","nextLine","offset","oldBMarks","oldBSCount","oldIndent","oldParentType","oldSCount","oldTShift","spaceAfterMarker","terminate","terminatorRules","isOutdented","oldLineMax","bMarks","tShift","eMarks","bsCount","parentType","markup","last","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","tmp","skipSpacesBack","skipCharsBack","cnt","block_names","HTML_SEQUENCES","lineText","skipBulletListMarker","skipOrderedListMarker","markTightParagraphs","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","Math","min","_endLine","destEndPos","destEndLineNo","href","label","res","title","references","Token","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","getLine","escapedSplit","isEscaped","lastPos","current","substring","columns","columnCount","aligns","t","tableLines","tbodyLines","firstCh","secondCh","pop","tok","isLinkOpen","isLinkClose","j","currentToken","nodes","ln","htmlLinkLevel","fullUrl","urlText","links","blockTokens","NEWLINES_RE","NULL_RE","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","QUOTE_TEST_RE","QUOTE_RE","APOSTROPHE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","StateCore","curr","EMAIL_RE","AUTOLINK_RE","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","processDelimiters","delimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","close","open","tokens_meta","postProcess","startDelim","endDelim","isStrong","scanned","scanDelims","can_open","can_close","DIGITAL_RE","NAMED_RE","ESCAPED","ch1","ch2","origStr","escapedStr","isLetter","lc","linkLevel","labelStart","ref","parseReference","SCHEME_RE","pmax","ws","StateInline","pendingLevel","_prev_delimiters","token_meta","canSplitWord","count","left_flanking","right_flanking","loneMarkers","isTerminatorChar","meta","attrPush","attrData","attrSet","value","attrGet","attrJoin","decodeCache","getDecodeCache","exclude","string","seq","b1","b2","b3","b4","chr","componentChars","encodeCache","getEncodeCache","keepEscaped","nextCode","encodeURIComponent","slashes","auth","port","pathname","hash","Url","protocolPattern","portPattern","simplePathPattern","delims","unwise","autoEscape","nonHostChars","hostEndingChars","hostnameMaxLen","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","urlParse","slashesDenoteHost","u","lowerProto","hec","rest","simplePath","substr","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","stringFromCharCode","error","RangeError","array","mapDomain","parts","labels","encoded","ucs2decode","output","counter","extra","ucs2encode","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","input","inputLength","n","bias","basic","oldi","w","baseMinusT","out","currentValue","basicLength","handledCPCount","handledCPCountPlusOne","q","qMinusT","Any","Cc","Cf","P","Z"],"sourceRoot":""}